<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.family.financial.management.dao.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.family.financial.management.dao.entity.Account">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="type" jdbcType="BIGINT" property="type" />
    <result column="income" jdbcType="BIGINT" property="income" />
    <result column="spending" jdbcType="BIGINT" property="spending" />
    <result column="account_num" jdbcType="BIGINT" property="accountNum" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="ext_no1" jdbcType="BIGINT" property="extNo1" />
    <result column="ext_no2" jdbcType="VARCHAR" property="extNo2" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.family.financial.management.model.DefiniteAccount">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="top_leve" jdbcType="BIGINT" property="topLevelId" />
    <result column="type" jdbcType="BIGINT" property="type" />
    <result column="income" jdbcType="BIGINT" property="income" />
    <result column="spending" jdbcType="BIGINT" property="spending" />
    <result column="account_num" jdbcType="BIGINT" property="accountNum" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="description" jdbcType="VARCHAR" property="description" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, type, income, spending, account_num, gmt_create, description, ext_no1,
    ext_no2
  </sql>
  <sql id="Base_Column_List2">
    account.id,  type, income, spending, account_num, gmt_create, top_leve,description, type_name
  </sql>
  <select id="selectByExample" parameterType="com.family.financial.management.dao.entity.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectDefiniteAccount" parameterType="com.family.financial.management.dao.entity.AccountExample" resultMap="BaseResultMap2">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List2" />
    from account account LEFT JOIN account_type ON account.`type` = account_type.`id`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.family.financial.management.dao.entity.AccountExample">
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.family.financial.management.dao.entity.Account">
    insert into account (id, user_id, type, 
      income, spending, account_num, 
      gmt_create, description, ext_no1, 
      ext_no2)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{type,jdbcType=BIGINT}, 
      #{income,jdbcType=BIGINT}, #{spending,jdbcType=BIGINT}, #{accountNum,jdbcType=BIGINT}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, #{extNo1,jdbcType=BIGINT}, 
      #{extNo2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.family.financial.management.dao.entity.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="income != null">
        income,
      </if>
      <if test="spending != null">
        spending,
      </if>
      <if test="accountNum != null">
        account_num,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="extNo1 != null">
        ext_no1,
      </if>
      <if test="extNo2 != null">
        ext_no2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIGINT},
      </if>
      <if test="income != null">
        #{income,jdbcType=BIGINT},
      </if>
      <if test="spending != null">
        #{spending,jdbcType=BIGINT},
      </if>
      <if test="accountNum != null">
        #{accountNum,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="extNo1 != null">
        #{extNo1,jdbcType=BIGINT},
      </if>
      <if test="extNo2 != null">
        #{extNo2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.family.financial.management.dao.entity.AccountExample" resultType="java.lang.Long">
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=BIGINT},
      </if>
      <if test="record.income != null">
        income = #{record.income,jdbcType=BIGINT},
      </if>
      <if test="record.spending != null">
        spending = #{record.spending,jdbcType=BIGINT},
      </if>
      <if test="record.accountNum != null">
        account_num = #{record.accountNum,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.extNo1 != null">
        ext_no1 = #{record.extNo1,jdbcType=BIGINT},
      </if>
      <if test="record.extNo2 != null">
        ext_no2 = #{record.extNo2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=BIGINT},
      income = #{record.income,jdbcType=BIGINT},
      spending = #{record.spending,jdbcType=BIGINT},
      account_num = #{record.accountNum,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      ext_no1 = #{record.extNo1,jdbcType=BIGINT},
      ext_no2 = #{record.extNo2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.family.financial.management.dao.entity.Account">
    update account
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIGINT},
      </if>
      <if test="income != null">
        income = #{income,jdbcType=BIGINT},
      </if>
      <if test="spending != null">
        spending = #{spending,jdbcType=BIGINT},
      </if>
      <if test="accountNum != null">
        account_num = #{accountNum,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="extNo1 != null">
        ext_no1 = #{extNo1,jdbcType=BIGINT},
      </if>
      <if test="extNo2 != null">
        ext_no2 = #{extNo2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.family.financial.management.dao.entity.Account">
    update account
    set user_id = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=BIGINT},
      income = #{income,jdbcType=BIGINT},
      spending = #{spending,jdbcType=BIGINT},
      account_num = #{accountNum,jdbcType=BIGINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      ext_no1 = #{extNo1,jdbcType=BIGINT},
      ext_no2 = #{extNo2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>